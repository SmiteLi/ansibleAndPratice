ENV["LC_ALL"] = "en_US.UTF-8"

Vagrant.configure("2") do |config|

  config.vm.define "controller", primary: true do |admin|
    admin.vm.box = "hashicorp/bionic64"
    admin.vm.hostname  = "controller"
    # admin.vm.network "public_network"
    admin.vm.network "private_network", ip: "172.17.177.11"
    admin.vm.provision "file", source: "ansible.cfg", destination: "~/.ansible.cfg"
    admin.vm.provision :shell, path: "bootstrap.sh"

    admin.vm.provision :ansible_local do |ansible|
      ansible.playbook       = "provisioning/playbook.yml"
      ansible.limit          = "all" # or only "nodes" group, etc.
      ansible.inventory_path = "inventory"

      ansible.host_vars = {
        "node1" => {"http_port" => 80,
                    "maxRequestsPerChild" => 808},
        "node2" => {"http_port" => 303,
                    "maxRequestsPerChild" => 909},
        "node3" => {"http_port" => 303,
                    "maxRequestsPerChild" => 909}
      }

      # https://www.vagrantup.com/docs/provisioning/ansible_intro
      ansible.groups = {
        "group1" => ["node1"],
        "group2" => ["node2"],
        "group3" => ["node[1:2]"],
        "group4" => ["other_node-[a:d]"], # silly group definition
        "all_groups:children" => ["group[1:9]"],
        "group1:vars" => {"variable1" => 9,
                          "variable2" => "example"}
    }

    end
  end

  config.vm.define "node1" do |node|
    node.vm.box = "hashicorp/bionic64"
    node.vm.hostname  = "node1"
    node.vm.network "private_network", ip: "172.17.177.21"
    # node.vm.provision :shell, path: "node.sh"
  end

  config.vm.define "node2" do |node|
    node.vm.box = "hashicorp/bionic64"
    node.vm.hostname  = "node2"
    node.vm.network "private_network", ip: "172.17.177.22"

  end

  config.vm.define "node3" do |node|
    node.vm.box = "hashicorp/bionic64"
    node.vm.hostname  = "node3"
    node.vm.network "private_network", ip: "172.17.177.23"
  end

  # config.vm.define "db_follower", autostart: false

  (1..3).each do |i|
    config.vm.define "node#{i}" do |node|
      node.vm.provision "shell", inline: "echo hello from node #{i}"
      node.vm.provision :shell, path: "node.sh"
      end
  end
end